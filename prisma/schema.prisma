

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id @default(uuid())
  name            String
  email           String   @unique
  password        String
  profilePicture  String?
  phoneNumber     String?
  description     String?  @db.Text
  isVerified      Boolean  @default(false)
  verificationCode String?
  verificationCodeExpiresAt DateTime?
  
  bookCases       BookCase[]
  userBooks       UserBook[]
  reviews         BookReview[]
}

model Book {
  id                 String       @id @default(uuid())
  integratorBookId   String       @unique // ID do Google Books
  bookName           String
  totalPages         Int?
  
  userBooks          UserBook[]
  reviews            BookReview[]
}

model BookCase {
  id              String      @id @default(uuid())
  name            String
  status          String?
  description     String?     @db.Text
  
  user            User        @relation(fields: [userId], references: [id])
  userId          String
  
  userBooks       UserBook[]
}

model UserBook {
  id                String   @id @default(uuid())
  status            String   // Ex: WANT_TO_READ, READING, READ
  currentUserPage   Int?
  
  user              User      @relation(fields: [userId], references: [id])
  userId            String
  
  book              Book      @relation(fields: [bookId], references: [id])
  bookId            String
  
  bookCase          BookCase  @relation(fields: [bookCaseId], references: [id])
  bookCaseId        String

  @@unique([userId, bookId])
}

model BookReview {
  id              String      @id @default(uuid())
  review          String      @db.Text
  status          String?
  description     String?     @db.Text
  isSpoiler       Boolean     @default(false)
  
  user            User        @relation(fields: [userId], references: [id])
  userId          String

  book              Book      @relation(fields: [bookId], references: [id])
  bookId            String
}